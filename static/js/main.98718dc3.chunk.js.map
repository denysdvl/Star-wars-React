{"version":3,"sources":["components/error/error-404/error-404.gif","components/error/error-indicator/error-indicator.png","components/header/index.js","components/header/header.js","services/swapi-service.js","components/spinner/index.js","components/spinner/spinner.js","components/error/error-404/index.js","components/error/error-404/error-404.js","components/error/error-indicator/index.js","components/error/error-indicator/error-indicator.js","components/error/error-wrapping/index.js","components/error/error-wrapping/error-wrapping.js","components/random-planet/random-planet.js","components/random-planet/index.js","components/row-left,right/index.js","components/row-left,right/row.js","components/hoc-data/wrappe-data.js","components/item-detalls/item-detalls.js","components/hoc-data/wrapping-detalls.js","components/swapi-service-context/swapi-service-context.js","components/hoc-data/wrappe-context-service.js","components/hoc-data/with-child-wreppe-list.js","components/item-list/item-list.js","components/item-list/index.js","components/helpe-components/item-list.js","components/helpe-components/person-detalls.js","components/helpe-components/planet-detalls.js","components/helpe-components/starship-detalls.js","components/pages/person-page.js","components/pages/starships-page.js","components/pages/planet-page.js","components/app/index.js","components/app/app.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","react_router_dom","to","SwapiService","_this","this","Object","classCallCheck","__apiBase","__imgBase","getResource","_x","_getResource","apply","arguments","asyncToGenerator","regenerator_default","mark","_callee7","url","res","wrap","_context7","prev","next","fetch","concat","sent","ok","Error","status","json","abrupt","stop","getAllPeople","_callee","_context","results","map","_transformPerson","getPerson","_ref2","_callee2","id","person","_context2","_x2","getImgPerson","_ref3","getAllPlanets","_callee3","_context3","_transformPlanet","getPlanets","_ref5","_callee4","planet","_context4","_x3","getImgStarships","_ref6","getAllStarships","_callee5","_context5","_transformStarship","getStarships","_ref8","_callee6","starships","_context6","_x4","getImgPlanets","_ref9","_extractId","item","match","name","population","rotationPeriod","rotation_period","diameter","climate","gravity","terrain","starship","model","manufacturer","costInCredits","cost_in_credits","length","crew","passengers","cargoCapacity","cargo_capacity","starshipClass","starship_class","gender","birthYear","birth_year","eyeColor","eye_color","Spinner","Error404","src","errorGif","alt","ErrorIndicator","errorPng","ErrorWrapping","possibleConstructorReturn","getPrototypeOf","call","state","hasError","componentDidCatch","setState","error_error_indicator","props","children","Component","RandomPlanet","swapiService","loading","error","onPlanetLoaded","onError","err","updatePlanet","Math","floor","random","then","catch","updateInterval","interval","setInterval","clearInterval","_this$state","checkData","errorMess","error_error_404","spinner","components_spinner","content","random_planet_PlanetView","error_wrapping","defaultProps","PlanetView","_ref","Fragment","Row","left","right","wrappingDate","View","_Component","_temp","_getPrototypeOf2","_len","args","Array","_key","data","inherits","createClass","key","value","updata","_this2","getData","assign","Record","field","label","ItemViev","imageUrl","bodyItem","React","Children","chilld","cloneElement","WrappingDetalls","image","onItemLoaded","updateItem","_this$props","idItem","getItems","setTimeout","prevProps","item_detalls_ItemViev","createContext","SwapiServiceProvider","Provider","SwapiServiceConsumer","Consumer","WrappedSwapiService","mapMethodsToProps","Wrapped","serviceProps","withChildFunction","fn","ItemList","onItemSelected","renderLabel","items","onClick","renderName","PersonList","PlanetList","StarshipsList","wrapping_detalls","item_detalls_Record","withRouter","history","params","row_left_right","person_detalls","push","PlanetPage","idItems","onIdItems","itemList","planetDetalls","planet_detalls","App","showRandomPlanet","toggleRandomPlanet","components_random_planet","components_header","react_router","path","render","exact","component","PersonPage","StarshipsPage","starship_detalls","ReactDOM","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.98718dc3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error-404.77ab57fb.gif\";","module.exports = __webpack_public_path__ + \"static/media/error-indicator.acc87b79.png\";","import Header from \"./header\";\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport './header.css';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = () =>{\r\nreturn(\r\n       <div className='row px-5 justify-content-lg-left pagination page-item text-info'>\r\n       <h1 className=\"col-sm-12 col-lg-auto mt-4 \">\r\n       <Link className=\"text-white\" to=\"/\">\r\n          Star DB\r\n        </Link></h1> \r\n        <ul className='text-info pagination pl-3 row col-sm-12 col-lg-6 mt-4 '>\r\n            <li className=\"page-item col-xs-12 col-sm-4 col-lg-3 mt-4\">\r\n            <h4><Link to=\"/people/\">People</Link></h4>\r\n            </li>\r\n            <li className=\"page-item col-xs-12 col-sm-4 col-lg-3 mt-4\">\r\n            <h4><Link to=\"/planet/\">Planets</Link></h4>\r\n           </li>\r\n            <li className=\"page-item col-xs-12 col-sm-4 col-lg-3 mt-4\">\r\n            <h4><Link to=\"/starships/\">Starships</Link></h4>\r\n            </li>\r\n        </ul>\r\n       </div> \r\n);\r\n};\r\n\r\nexport default Header;","export default class SwapiService {\r\n    constructor() {\r\n        const __apiBase = \"https://swapi.co/api\";\r\n        const __imgBase = \"https://starwars-visualguide.com/assets/img/\"\r\n        async function getResource(url) {\r\n            const res = await fetch(`${__apiBase}${url}`);\r\n            if (!res.ok) {\r\n                throw new Error(`Could not fetch ${__apiBase}${url}` +\r\n                    ` received ${res.status}`);\r\n            }\r\n            return await res.json();\r\n        }\r\n\r\n        this.getAllPeople = async () => {\r\n            const res = await getResource(`/people/`);\r\n            return res.results.map(this._transformPerson);\r\n        };\r\n        this.getPerson = async (id) => {\r\n            const person = await getResource(`/people/${id}`);\r\n            return this._transformPerson(person);\r\n        };\r\n        this.getImgPerson = ({id}) => {\r\n            return `${__imgBase}characters/${id}.jpg`\r\n        }\r\n        this.getAllPlanets = async () => {\r\n            const res = await getResource(`/planets/`);\r\n            return res.results.map(this._transformPlanet);\r\n        };\r\n        this.getPlanets = async (id) => {\r\n            const planet = await getResource(`/planets/${id}`);\r\n            return this._transformPlanet(planet);\r\n        };\r\n        this.getImgStarships = ({id}) => {\r\n            return `${__imgBase}starships/${id}.jpg`\r\n        }\r\n        this.getAllStarships = async () => {\r\n            const res = await getResource(`/starships/`);\r\n            return res.results.map(this._transformStarship);\r\n        };\r\n        this.getStarships = async (id) => {\r\n            const starships = await getResource(`/starships/${id}`);\r\n            return this._transformStarship(starships);\r\n        };\r\n        this.getImgPlanets = ({id}) => {\r\n            return `${__imgBase}planets/${id}.jpg`\r\n        }\r\n\r\n        this._extractId = (item) => {\r\n            const idRegex = /\\/([0-9]*)\\/$/;\r\n            return item.url.match(idRegex)[1];\r\n        }\r\n\r\n        this._transformPlanet = (planet) => {\r\n            return {\r\n                id: this._extractId(planet),\r\n                name: planet.name,\r\n                population: planet.population,\r\n                rotationPeriod: planet.rotation_period,\r\n                diameter: planet.diameter,\r\n                climate: planet.climate,\r\n                gravity: planet.gravity,\r\n                terrain: planet.terrain\r\n            };\r\n        };\r\n        this._transformStarship = (starship)=> {\r\n            return {\r\n              id: this._extractId(starship),\r\n              name: starship.name,\r\n              model: starship.model,\r\n              manufacturer: starship.manufacturer,\r\n              costInCredits: starship.cost_in_credits,\r\n              length: starship.length,\r\n              crew: starship.crew,\r\n              passengers: starship.passengers,\r\n              cargoCapacity: starship.cargo_capacity,\r\n              starshipClass: starship.starship_class\r\n            };\r\n          };\r\n        \r\n          this._transformPerson = (person) => {\r\n            return {\r\n                id: this._extractId(person),\r\n                name: person.name,\r\n                gender: person.gender,\r\n                birthYear: person.birth_year,\r\n                eyeColor: person.eye_color\r\n            };\r\n          };\r\n          \r\n    }\r\n}\r\n// const swapi = new SwapiService();\r\n\r\n// swapi.getAllPeople().then((people) => {\r\n//     people.forEach(p => {\r\n//         console.log(p.name);\r\n//     });\r\n// });\r\n// swapi.getPerson(4).then((p) => {\r\n//     console.log(p.name);\r\n// });\r\n\r\n// swapi.getAllPlanets().then((people) => {\r\n//     people.forEach(p => {\r\n//         console.log(p.name);\r\n//     });\r\n// });\r\n// swapi.getPlanets(5).then((p) => {\r\n//     console.log(p.name, \"23\");\r\n// });\r\n\r\n// swapi.getAllStarships().then((people) => {\r\n//     people.forEach(p => {\r\n//         console.log(p.name);\r\n//     });\r\n// });\r\n// swapi.getStarships(5).then((p) => {\r\n//     console.log(p.name, \"23\");\r\n// });","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n  <div className=\"card item-detalls mx-4\">\r\n    <div className=\"lds-css\">\r\n      <div className=\"lds-double-ring\">\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div></div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Spinner;","import Error404 from './error-404';\r\n\r\nexport default Error404;","import React from 'react';\r\n\r\nimport './error-404.css';\r\nimport errorGif from './error-404.gif';\r\n\r\nconst Error404 = () => {\r\n  return (\r\n    <div className=\"container  row\">\r\n    <div className=\"col-sm-12 col-md-auto\">\r\n    <img src={errorGif} alt=\"error gif\" className=\"video-error pt-3\"/>\r\n   </div>\r\n   <div className=\"col-sm-12 col-md-auto star-wars\">\r\n   <span className=\"mt-5 ml-3\">\r\n         Something went wrong in the universe  <br/>\r\n        (but we've already sent droids to work it out.)\r\n      </span>\r\n      </div>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default Error404;","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\n\r\nimport './error-indicator.css';\r\nimport errorPng from './error-indicator.png';\r\n\r\n\r\nconst ErrorIndicator = () => {\r\n  return (\r\n    <div className=\"justify-content-center error-indicator my-4\">\r\n    <img src={errorPng} alt=\"error png\" className=\"video-error\"/>\r\n    <span className=\"star-wars\">\r\n         Something went wrong in the universe  <br/>\r\n        (but we've already sent droids to work it out.)\r\n      </span>\r\n      </div>\r\n    \r\n);\r\n};\r\n\r\nexport default ErrorIndicator;","import ErrorWrapping from './error-wrapping';\r\n\r\nexport default ErrorWrapping;","import React, { Component } from 'react';\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nexport default class ErrorWrapping extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            hasError: false\r\n        };\r\n        this.componentDidCatch = () => {\r\n            this.setState({ hasError: true });\r\n          };\r\n    };\r\n    render(){\r\n        if (this.state.hasError) {\r\n            return <ErrorIndicator/>\r\n            }\r\n            return this.props.children;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport SwapiService from \"../../services/swapi-service\";\r\nimport Spinner from \"../spinner/\";\r\nimport Error404 from \"../error/error-404\";\r\nimport ErrorWrapping from \"../error/error-wrapping\"\r\nimport './random-planet.css';\r\n\r\nexport default class RandomPlanet extends Component {\r\n  static defaultProps = {\r\n    updateInterval: 1000\r\n  }\r\n  static propTypes = {\r\n    updateInterval: PropTypes.number\r\n  }\r\n  componentDidMount(){\r\n    const {updateInterval} = this.props\r\n    this.updatePlanet();\r\n    this.interval = setInterval(this.updatePlanet, updateInterval);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\nconstructor(){\r\nsuper();\r\n   \r\n this.swapiService = new SwapiService();\r\n    \r\n this.state = {\r\n  planet: {},\r\n  loading: true,\r\n  error: false\r\n };\r\n\r\nthis.onPlanetLoaded = (planet) =>{\r\n  this.setState({\r\n    planet,\r\n    loading: false,\r\n    error: false\r\n  });\r\n};\r\n\r\nthis.onError = (err) => {\r\nthis.setState({\r\n  loading: false,\r\n  error: true\r\n});\r\n};\r\n\r\n this.updatePlanet = () => {\r\n   const id = Math.floor(Math.random()*18) + 2;\r\n   this.swapiService\r\n   .getPlanets(id)\r\n   .then(this.onPlanetLoaded)\r\n   .catch(this.onError);\r\n };\r\n\r\n \r\n}\r\n\r\n  render() {\r\n    const { planet, loading, error } = this.state;\r\n\r\n    const checkData = !(loading || error);\r\n\r\n    const errorMess = error ? <Error404/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = checkData ? <PlanetView  planet={planet}/> : null;\r\n\r\n    return (\r\n      <ErrorWrapping>\r\n        <div className=\"random-planet jumbotron rounded mx-4 mb-0\">\r\n      {errorMess}\r\n      {spinner}\r\n      {content}\r\n       </div>\r\n      </ErrorWrapping>\r\n    );\r\n  } \r\n}\r\nconst PlanetView = ({planet}) =>{\r\n  const { id, population,\r\n    name, rotationPeriod, diameter } = planet\r\n\r\n  return(\r\n<React.Fragment>\r\n  <div className=\"container  row\">\r\n        <div className=\"col-sm-12 col-md-auto\">\r\n        <img alt=\"...\" className=\"planet-image rounded d-block\"\r\n             src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}/>\r\n             </div>\r\n        <div className=\"col-sm-12 col-md-auto\">\r\n          <h4>{name}</h4>\r\n          <ul className=\"list-group list-group-flush\">\r\n            <li className=\"list-group-item\">\r\n              <span className=\"term\">Population</span>\r\n              <span>{population}</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span className=\"term\">Rotation Period</span>\r\n              <span>{rotationPeriod}</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span className=\"term\">Diameter</span>\r\n              <span>{diameter}</span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n</React.Fragment>\r\n);\r\n}","import RandomPlanet from \"./random-planet\";\r\n\r\nexport default RandomPlanet;","import Row from './row';\r\n\r\nexport default Row;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './row';\r\n\r\nconst Row =  ({left, right}) =>{\r\n    return(\r\n        <div className=\"row m-2 \">\r\n         <div className=\"col-xs-12 col-lg-6 pb-4\">\r\n       {left}\r\n    </div>\r\n        <div className=\"col-xs-12 col-lg-6 \">\r\n       {right}\r\n        </div>\r\n         </div>\r\n          \r\n    );\r\n}\r\nRow.propTypes = {\r\n    left: PropTypes.node,\r\n    right: PropTypes.node\r\n  }\r\n\r\nexport default Row;","import React, {\r\n  Component\r\n} from 'react';\r\nimport Spinner from '../spinner';\r\nimport ErrorWrapping from '../error/error-wrapping';\r\n\r\nconst wrappingDate = (View) => {\r\n  return class extends Component {\r\n\r\n    state = {\r\n      data: null\r\n    };\r\n\r\n    componentDidMount() {\r\n     this.updata();\r\n    }\r\n\r\n    updata(){\r\n      this.props.getData()\r\n      .then((data) => {\r\n        this.setState({\r\n          data\r\n        });\r\n      });\r\n    }\r\n    render() {\r\n      const {data} = this.state;\r\n      if (!data) {\r\n        return <Spinner/> ;\r\n      }\r\n      return ( <ErrorWrapping>\r\n        <View {...this.props}\r\n        data = { data}/></ErrorWrapping>\r\n\r\n      );\r\n\r\n    }\r\n  };\r\n};\r\n\r\nexport default wrappingDate;","import React from 'react';\r\n\r\nimport './item-detalls.css';\r\n\r\nconst Record = ({item, field, label}) => {\r\n  return(\r\n    <li className=\"list-group-item\">\r\n    <span className=\"term\">{label}</span>\r\n    <span> {item[field]}</span>\r\n  </li>\r\n  )\r\n}\r\n\r\nconst ItemViev = ({item, imageUrl, bodyItem }) => {\r\n  const { name} = item;\r\n    return (\r\n  <div className='row no-gutters'>\r\n          <div className=\"col-md-4 col-sm-12 p-2\">\r\n               <img  alt=\"character\"\r\n                src={imageUrl} \r\n              className=\"card-img item-image rounded\"/>\r\n          </div>\r\n      <div className=\"col-md-8 col-sm-12\">\r\n      <div className=\"card-body\">\r\n        <h4>{name}</h4>\r\n        <ul className=\"list-group list-group-flush\">\r\n         {\r\n           React.Children.map(bodyItem, (chilld)=>{\r\n             return React.cloneElement(chilld, {item})\r\n           })\r\n         }\r\n        </ul>\r\n      </div>\r\n      </div>\r\n      </div>\r\n  );\r\n}\r\nexport{\r\n  Record,\r\n  ItemViev\r\n};\r\n","import React, {\r\n    Component\r\n} from 'react';\r\nimport Spinner from '../spinner';\r\nimport ErrorWrapping from '../error/error-wrapping';\r\nimport Error404 from '../error/error-404'\r\nimport {\r\n    ItemViev\r\n} from '../item-detalls'\r\n\r\nclass WrappingDetalls extends Component {\r\n    componentDidMount() {\r\n        setTimeout(this.updateItem(), 4000);\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.idItem !== prevProps.idItem) {\r\n            this.setState({\r\n                loading: true\r\n            });\r\n\r\n            setTimeout(this.updateItem(), 4000);\r\n        }\r\n    }\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            item: null,\r\n            image: null,\r\n            loading: true,\r\n            error: false\r\n        };\r\n        this.onItemLoaded = (item) => {\r\n            const {\r\n                imageUrl\r\n            } = this.props;\r\n            this.setState({\r\n                item,\r\n                image: imageUrl(item),\r\n                loading: false,\r\n                error: false\r\n            });\r\n        };\r\n\r\n        this.onError = (err) => {\r\n            this.setState({\r\n                loading: false,\r\n                error: true\r\n            });\r\n        };\r\n        this.updateItem = () => {\r\n            const {\r\n                idItem,\r\n                getItems\r\n            } = this.props;\r\n            if (!idItem) {\r\n                return;\r\n            }\r\n            getItems(idItem)\r\n                .then(this.onItemLoaded)\r\n                .catch(this.onError);\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {item, error, loading, image} = this.state;\r\n        const checkData = !(loading || error);\r\n      \r\n          const errorMess = error ? <Error404/> : null;\r\n          const spinner = loading ? <Spinner/> : null;\r\n          const content = checkData ? <ItemViev  item={item} \r\n          imageUrl={image}\r\n          bodyItem = {this.props.children}/> : null;\r\n      \r\n          return(\r\n              <ErrorWrapping>\r\n                <div className=\"card item-detalls mx-4\">\r\n                {errorMess}\r\n                {spinner}\r\n                {content}\r\n                </div>\r\n             </ErrorWrapping>\r\n    )\r\n};\r\n\r\n};\r\nexport default WrappingDetalls;","import React from 'react';\r\n\r\nconst {\r\n  Provider : SwapiServiceProvider,\r\n  Consumer : SwapiServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n  SwapiServiceProvider,\r\n  SwapiServiceConsumer\r\n};","import React from 'react';\r\nimport { SwapiServiceConsumer } from '../swapi-service-context';\r\n\r\n\r\nconst WrappedSwapiService = (mapMethodsToProps) => (Wrapped) => {\r\n    return(props)=>{\r\n        return(<SwapiServiceConsumer>\r\n            {\r\n            (swapiService) =>{\r\n                const serviceProps = mapMethodsToProps(swapiService);\r\n                return(\r\n           <Wrapped {...props} {...serviceProps}/>\r\n           );\r\n        }\r\n    }\r\n        </SwapiServiceConsumer>)\r\n        };  \r\n};\r\nexport default WrappedSwapiService;","import React from 'react';\r\n\r\nconst withChildFunction =(fn) => (Wrapped) => {\r\n    return (props) => {\r\n        return (\r\n            <Wrapped {...props}>\r\n            {fn}\r\n          </Wrapped>\r\n        )\r\n    };\r\n};\r\nexport default withChildFunction;","import React from 'react';\r\n\r\nimport './item-list.css';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ItemList = (props) => {\r\n\r\n  const { data, onItemSelected, children: renderLabel } = props;\r\n  const items = data.map((item) => {\r\n    const { id } = item;\r\n    const label = renderLabel(item);\r\n\r\n    return (\r\n      <li className=\"list-group-item list-group-item-action \"\r\n          key={id}\r\n          onClick={() => onItemSelected(id)}>\r\n        {label}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <ul className=\"item-list list-group mx-4\">\r\n      {items}\r\n    </ul>\r\n  );\r\n};\r\nItemList.defaultProps = {\r\n  onItemSelected: ()=>{}\r\n}\r\nItemList.propTypes = {\r\n  onItemSelected: PropTypes.func,\r\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  children: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ItemList;","import ItemList from \"./item-list\";\r\n\r\nexport default ItemList;","import React from 'react';\r\n\r\nimport {\r\n    wrappingDate,\r\n    withChildFunction,\r\n    WrappedSwapiService\r\n} from '../hoc-data';\r\nimport ItemList from '../item-list'\r\n\r\nconst mapPlanetsMethodsToProps = (swapiService) => {\r\n    return{\r\n         getData: swapiService.getAllPlanets\r\n    } \r\n}\r\nconst mapStarshipsMethodsToProps = (swapiService) => {\r\n    return{\r\n         getData: swapiService.getAllStarships\r\n    } \r\n}\r\nconst mapPeopleMethodsToProps = (swapiService) => {\r\n    return{\r\n         getData: swapiService.getAllPeople\r\n    } \r\n}\r\n\r\nconst renderName = ({name}) => <span> { name} </span>;\r\n\r\nconst PersonList = WrappedSwapiService(mapPeopleMethodsToProps)(\r\n    wrappingDate(\r\n        withChildFunction(renderName)(ItemList)));\r\nconst PlanetList = WrappedSwapiService(mapPlanetsMethodsToProps)(\r\n    wrappingDate(\r\n        withChildFunction(renderName)(ItemList)));\r\nconst StarshipsList = WrappedSwapiService(mapStarshipsMethodsToProps)(\r\n    wrappingDate(\r\n        withChildFunction(renderName)(ItemList)));\r\n\r\n    export {\r\n    PersonList,\r\n    PlanetList,\r\n    StarshipsList\r\n};","import React from 'react';\r\nimport { WrappingDetalls } from \"../hoc-data\";\r\nimport { WrappedSwapiService } from '../hoc-data'\r\nimport {Record} from \"../item-detalls/item-detalls\";;\r\n\r\nconst PersonDetalls = (props) => {\r\n         return(\r\n    <WrappingDetalls {...props} >\r\n    <Record field=\"gender\" label=\"Gender:\"/>\r\n    <Record field=\"birthYear\" label=\"Birth Year:\"/>\r\n    <Record field=\"eyeColor\" label=\"Eye Color:\"/>\r\n    </WrappingDetalls>\r\n         );\r\n        };\r\nconst mapMethodsToProps = (swapiService) => {\r\n     return{\r\n          imageUrl: swapiService.getImgPerson,\r\n          getItems: swapiService.getPerson\r\n     } \r\n}\r\n\r\nexport default WrappedSwapiService(mapMethodsToProps)(PersonDetalls);","import React from 'react';\r\nimport {WrappingDetalls,WrappedSwapiService} from \"../hoc-data\";\r\nimport {Record} from \"../item-detalls/item-detalls\";\r\n\r\nconst PlanetDetalls = (props) => {\r\n    return(\r\n    <WrappingDetalls {...props}>\r\n        <Record field=\"population\" label=\"Population:\"/>\r\n        <Record field=\"climate\" label=\"Climate:\"/>\r\n        <Record field=\"gravity\" label=\"Gravity:\"/>\r\n        <Record field=\"terrain\" label=\"Terrain:\"/>\r\n        </WrappingDetalls>\r\n         );};\r\n\r\n         const mapMethodsToProps = (swapiService) => {\r\n            return{\r\n                 imageUrl: swapiService.getImgPlanets,\r\n                 getItems: swapiService.getPlanets\r\n            } \r\n       }\r\n\r\nexport default WrappedSwapiService(mapMethodsToProps)(PlanetDetalls);","import React from 'react';\r\nimport {WrappingDetalls} from \"../hoc-data\";\r\nimport {Record} from \"../item-detalls/item-detalls\";\r\nimport { WrappedSwapiService } from '../hoc-data'\r\n\r\nconst StarshipsDetalls = (props) => {\r\n    return(\r\n    <WrappingDetalls {...props} >\r\n        <Record field=\"model\" label=\"Model:\"/>\r\n        <Record field=\"starshipClass\" label=\"Starship Class:\"/>\r\n        <Record field=\"cargoCapacity\" label=\"Cargo Capacity:\"/>\r\n        </WrappingDetalls>\r\n         );};\r\n\r\n         const mapMethodsToProps = (swapiService) => {\r\n            return{\r\n                 imageUrl: swapiService.getImgStarships,\r\n                 getItems: swapiService.getStarships\r\n            } \r\n       }\r\n\r\nexport default WrappedSwapiService(mapMethodsToProps)(StarshipsDetalls);\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Row from \"../row-left,right\"\r\nimport ErrorWrapping from \"../error/error-wrapping\"\r\nimport { \r\n    PersonList,\r\n    PersonDetalls, } from '../helpe-components'\r\n\r\nconst PersonPage = ({history, match}) => {\r\n    \r\n    const { id } = match.params;\r\n        return(\r\n            <ErrorWrapping>\r\n              <Row left={<ErrorWrapping> <PersonDetalls idItem={id}/> </ErrorWrapping>}\r\n            right={<PersonList onItemSelected={(id) => history.push(id)}/>}/>\r\n            </ErrorWrapping>     \r\n        );\r\n    }\r\n    export default withRouter(PersonPage);","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ErrorWrapping from \"../error/error-wrapping\"\r\nimport { StarshipsList} from '../helpe-components'\r\n\r\nconst StarshipsPage = ({history}) => {  \r\n        return(\r\n            <ErrorWrapping> \r\n             <StarshipsList \r\n            onItemSelected={(id) => history.push(id)}/>\r\n            </ErrorWrapping>     \r\n        );\r\n    }\r\nexport default withRouter(StarshipsPage);","import React, { Component } from 'react';\r\n\r\nimport Row from \"../row-left,right\"\r\nimport ErrorWrapping from \"../error/error-wrapping\"\r\nimport { \r\n    PlanetList,\r\n    PlanetDetalls, } from '../helpe-components'\r\n\r\nexport default class PlanetPage extends Component {\r\n    \r\nconstructor(){\r\n    super();\r\n    this.state = {\r\n       idItems: 12\r\n     };\r\n\r\n      this.onIdItems = (id) => {\r\n        this.setState(() => {\r\n            return {idItems: id}\r\n        });\r\n      }; \r\n}\r\n    render(){\r\n        const { idItems, } = this.state;\r\n        \r\n        const itemList = (\r\n            <PlanetList\r\n            onItemSelected={this.onIdItems}/>);\r\n        const planetDetalls = (\r\n            <ErrorWrapping>\r\n            <PlanetDetalls idItem={idItems}/>\r\n            </ErrorWrapping>\r\n         );\r\n              \r\n        return(\r\n            <ErrorWrapping>\r\n              <Row left={planetDetalls} right={itemList}/> \r\n            </ErrorWrapping>     \r\n        );\r\n    }\r\n}","import App from \"./app\";\r\n\r\nexport default App;","import React, { Component } from 'react';\r\n\r\nimport './app.css';\r\n\r\nimport Header from '../header';\r\nimport RandomPlanet from '../random-planet';\r\nimport {PersonPage, StarshipsPage, PlanetPage} from '../pages'\r\nimport ErrorWrapping from \"../error/error-wrapping\"\r\nimport SwapiService from \"../../services/swapi-service\";\r\nimport { SwapiServiceProvider } from '../swapi-service-context';\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom'\r\nimport { StarshipsDetalls } from '../helpe-components'\r\nexport default class App extends Component {\r\nconstructor(){\r\n    super();\r\n    this.swapiService = new SwapiService();\r\n    this.state = {\r\n        showRandomPlanet: true,\r\n    };\r\n\r\n    this.toggleRandomPlanet = () =>{\r\n        this.setState((state) => {\r\n            return {showRandomPlanet: !state.showRandomPlanet};\r\n        });\r\n    };    \r\n};\r\n\r\n  render(){\r\n      const planet = this.state.showRandomPlanet ?\r\n      <RandomPlanet updateInterval={5000}/> : null;\r\n\r\n  return (\r\n<ErrorWrapping>\r\n  <SwapiServiceProvider value={this.swapiService}>\r\n    <Router>\r\n    <Header/>\r\n    { planet }\r\n  <button\r\n    className=\"m-4 btn btn-warning btn-lg\"\r\n    onClick={this.toggleRandomPlanet}>\r\n    Toggle Random Planet\r\n    </button>\r\n    <Switch>\r\n    < Route path='/' \r\n            render={() =><h2 className='d-flex justify-content-center'>Welcome to StarDB</h2>}\r\n            exact/>\r\n    < Route path='/people/:id?' component={PersonPage}/>\r\n    < Route path='/starships/' exact component={StarshipsPage}/>\r\n    < Route path='/planet/' component={PlanetPage}/>\r\n    < Route path='/starships/:id'\r\n    render={({match})=> {\r\n      const { id } = match.params;\r\n    return <StarshipsDetalls idItem={id} />\r\n    }}/>\r\n    <Redirect to=\"/\"/>\r\n    </Switch>\r\n    </Router>\r\n    \r\n</SwapiServiceProvider>\r\n</ErrorWrapping>);\r\n  };\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app'\n\nReactDOM.render(<App />,\n  document.getElementById('root'));"],"sourceRoot":""}